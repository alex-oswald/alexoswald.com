<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alexs Engineering Blog – </title>
    <link>/blog/</link>
    <description>Recent content on Alexs Engineering Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 07 Oct 2023 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Downloading individual files from an Azure DevOps pipeline artifact using the REST API</title>
      <link>/blog/2023-10-08-azure-devops-artifacts/</link>
      <pubDate>Sat, 07 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-10-08-azure-devops-artifacts/</guid>
      <description>
        
        
        &lt;p&gt;If you&amp;rsquo;ve come here, you know what you want. You want to be able to download individual files from an Azure DevOps pipeline artifact. The documentation makes no sense. So lets get straight to the point.&lt;/p&gt;
&lt;p&gt;First, I want to point out that this only works with &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/publish-pipeline-artifact-v1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PublishPipelineArtifact&lt;/a&gt;, and &lt;strong&gt;NOT&lt;/strong&gt; with &lt;a href=&#34;https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/publish-build-artifacts-v1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PublishBuildArtifacts&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve created a demo pipeline for this post. It simply creates two text files and publishes them as a pipeline artifact.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-0&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;pool&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;vmImage&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ubuntu-latest&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;pwsh&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      Write-Host &amp;#34;Test files&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;Test string 1&amp;#34; | Out-File -FilePath .\test1.txt
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &amp;#34;Test string 2&amp;#34; | Out-File -FilePath .\test2.txt&lt;/span&gt;      
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;workingDirectory&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$(Build.ArtifactStagingDirectory)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  - &lt;span style=&#34;color:#f92672&#34;&gt;task&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;PublishPipelineArtifact@1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;inputs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;ArtifactName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;TestArtifact&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;targetPath&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;$(Build.ArtifactStagingDirectory)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-0&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Let us start by hitting the &lt;a href=&#34;https://learn.microsoft.com/en-us/rest/api/azure/devops/build/artifacts/get-artifact&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Artifacts - Get Artifact&lt;/a&gt; so we can get some info about the artifact.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Request&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-1&#34;&gt;https://dev.azure.com/oswaldtechnologies/add3132d-b1ce-4519-8299-4e67eecad1f5/_apis/build/builds/703/artifacts?artifactName=TestArtifact&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-1&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Response&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-2&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;322&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TestArtifact&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;12f1170f-54f2-53f3-20dd-22fc7dff55f9&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;resource&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PipelineArtifact&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;973C2055701973A0FDFB695031EE3F9E7A91741016CA639E9D21ECCD1B387E9B01&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;RootId&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DC04A61FBB2E879A10EE8BA01B28B4623140546805A968AB2B491B2EE1BD2E4102&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;artifactsize&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;28&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;HashType&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DEDUPNODEORCHUNK&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;url&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://dev.azure.com/oswaldtechnologies/add3132d-b1ce-4519-8299-4e67eecad1f5/_apis/build/builds/703/artifacts?artifactName=TestArtifact&amp;amp;api-version=7.1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;downloadUrl&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://artprodeus21.artifacts.visualstudio.com/A3e090689-466b-408e-a12e-87c169eff347/add3132d-b1ce-4519-8299-4e67eecad1f5/_apis/artifact/cGlwZWxpbmVhcnRpZmFjdDovL29zd2FsZHRlY2hub2xvZ2llcy9wcm9qZWN0SWQvYWRkMzEzMmQtYjFjZS00NTE5LTgyOTktNGU2N2VlY2FkMWY1L2J1aWxkSWQvNzAzL2FydGlmYWN0TmFtZS9UZXN0QXJ0aWZhY3Q1/content?format=zip&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-2&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Notice &lt;code&gt;resource.data&lt;/code&gt;. This is actually the &lt;code&gt;fileId&lt;/code&gt;. And this is what the documentation does not mention. We use the &lt;code&gt;fileId&lt;/code&gt; of the actual artifact, to get the artifacts manifest contents. The manifest contains an array of all items in the artifact, including their file path and file id. So now lets hit &lt;a href=&#34;https://learn.microsoft.com/en-us/rest/api/azure/devops/build/artifacts/get-file&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Aritfacts - Get File&lt;/a&gt; with the artifacts file id to get the manifest. Oddly, you must add &lt;code&gt;fileId&lt;/code&gt; &lt;strong&gt;and&lt;/strong&gt; &lt;code&gt;fileName&lt;/code&gt; to the query, even though what you set &lt;code&gt;fileName&lt;/code&gt; to doesn&amp;rsquo;t matter. For this example, I&amp;rsquo;m going to call it &lt;code&gt;manifest.json&lt;/code&gt;, because well, that&amp;rsquo;s what it is.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Request&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-3&#34;&gt;https://dev.azure.com/oswaldtechnologies/add3132d-b1ce-4519-8299-4e67eecad1f5/_apis/build/builds/703/artifacts?artifactName=TestArtifact&amp;amp;fileId=973C2055701973A0FDFB695031EE3F9E7A91741016CA639E9D21ECCD1B387E9B01&amp;amp;fileName=manifest.json&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-3&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Response&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-4&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;manifestFormat&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1.1.0&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;items&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/test1.txt&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;blob&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;D21C967E56201F344B44EE00F537263C3503AEB13931F99754F9E78E14E6C90C01&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/test2.txt&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;blob&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FE2A48E456C37C7BAF1F86D724E2C2B30658AA1A899201D61E23CE59A333A63801&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;size&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;manifestReferences&amp;#34;&lt;/span&gt;: []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-4&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now we can hit &lt;a href=&#34;https://learn.microsoft.com/en-us/rest/api/azure/devops/build/artifacts/get-file&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Aritfacts - Get File&lt;/a&gt; once more. This time let us get the contents of &lt;code&gt;test1.txt&lt;/code&gt;. Again, it does not matter what you set &lt;code&gt;fileName&lt;/code&gt; too, as long as the &lt;code&gt;fileId&lt;/code&gt; matches the &lt;code&gt;blob.id&lt;/code&gt; of the file you want to download.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Request&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-5&#34;&gt;https://dev.azure.com/oswaldtechnologies/add3132d-b1ce-4519-8299-4e67eecad1f5/_apis/build/builds/703/artifacts?artifactName=TestArtifact&amp;amp;fileId=D21C967E56201F344B44EE00F537263C3503AEB13931F99754F9E78E14E6C90C01&amp;amp;fileName=test1.txt&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-5&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Response&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-6&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-txt&#34; data-lang=&#34;txt&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Test string 1&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-6&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;And there you have it! Figuring out how to do this was important for a project I was working on. I needed to download a small json file from artifacts that were over 10GB in size. It would be silly to download the whole artifact just to extract a small json file from it.&lt;/p&gt;
&lt;p&gt;Give credit where credit is due. I found the solution to this problem via this &lt;a href=&#34;https://github.com/MicrosoftDocs/vsts-rest-api-specs/issues/381#issuecomment-1612877259&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub issues comment&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;{{ partial &amp;ldquo;giscus/script&amp;rdquo; . }}&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Running a Cloudflare DDNS service for your home VPN</title>
      <link>/blog/2023-02-20-cloudflare-ddns/</link>
      <pubDate>Mon, 20 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>/blog/2023-02-20-cloudflare-ddns/</guid>
      <description>
        
        
        &lt;p&gt;In this post I&amp;rsquo;m going to show you how to use the Cloudflare DDNS service I wrote to keep my constantly changing public IP
updated with my VPN&amp;rsquo;s DNS record in Cloudflare. I use a NetGear Orbi router at home, and it supports using
&lt;a href=&#34;https://www.noip.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;No-IP&lt;/a&gt; as a free DDNS service. The problem with using this free service, is you have to login and manually
confirm your free hostname monthly. While this may be okay for those that don&amp;rsquo;t own any domain names, it isn&amp;rsquo;t something I wanted to
keep doing manually.&lt;/p&gt;
&lt;h2&gt;Why do we need a DDNS service?&lt;span class=&#34;absolute -mt-20&#34; id=&#34;why-do-we-need-a-ddns-service&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#why-do-we-need-a-ddns-service&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The reason for this, is because your ISP typically changes your public IP address every so often, unless you pay for a static IP,
which is only common for businesses. And typically you want your IP address assigned to a hostname, so you can connect your VPN to
something like, &lt;code&gt;vpn.example.com&lt;/code&gt;, instead of the actual IP address. If you don&amp;rsquo;t, you would need to update your VPN profile on each
device to point to the new IP address each time it changes. So how do we get around this? Dynamic DNS services, like the one my Orbi
router supports, let you configure a free hostname, such as &lt;code&gt;vpn.mynetgear.com&lt;/code&gt; to point to your public IP, and automatically update
the DNS record each time the router detects a new public IP. But this comes at the cost of doing the manual hostname confirmation
each month to keep it free.&lt;/p&gt;
&lt;p&gt;Because I love to automate things, already own some domain names, and run a Docker swarm in my home lab, I wanted to put together
a simples solution to the problem instead of finding another solution online. While I found a few that would work, they didn&amp;rsquo;t do
exactly what I wanted, and I wouldn&amp;rsquo;t of learned as much. So here we are&amp;hellip;&lt;/p&gt;
&lt;h2&gt;What is CloudflareDDNS&lt;span class=&#34;absolute -mt-20&#34; id=&#34;what-is-cloudflareddns&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#what-is-cloudflareddns&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;See the CloudflareDDNS repository on github: &lt;a href=&#34;https://github.com/alex-oswald/CloudflareDDNS&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/alex-oswald/CloudflareDDNS&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;CloudflareDDNS is a .NET application that runs in a container. It creates a background service that runs a few commands on an interval,
defaulting to every 15 minutes. You can run it locally on any machine. I run mine as a stack on a Raspberry Pi swarm since setup is
simple with &lt;a href=&#34;https://www.portainer.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Portainer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&#34;https://github.com/alex-oswald/CloudflareDDNS/blob/main/CloudflareDDNS/DDNSBackgroundService.cs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DDNSBackgroundService&lt;/a&gt; will do
the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use a DNS request to get your public IP address&lt;/li&gt;
&lt;li&gt;Get a list of Zones from your Cloudflare account&lt;/li&gt;
&lt;li&gt;Get the id of the Zone you have specified via config from the list of Zones&lt;/li&gt;
&lt;li&gt;Get the DNS records for the Zone&lt;/li&gt;
&lt;li&gt;If the DNS record you specified via config does not exist, it will create an A record with your public IP address&lt;/li&gt;
&lt;li&gt;If it does exist, and the IP addresses do not match, it will update the DNS record with the new IP address&lt;/li&gt;
&lt;li&gt;If the IP addresses do match, nothing will happen&lt;/li&gt;
&lt;li&gt;The background service delays for the configures time interval&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Running the container&lt;span class=&#34;absolute -mt-20&#34; id=&#34;running-the-container&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#running-the-container&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Make sure you have Docker Desktop installed.&lt;/p&gt;
&lt;p&gt;Obtain an API token from Cloudflare with at least Zone Read and DNS Edit permissions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;api_token_permissions.png&#34; alt=&#34;api_token_permissions&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;If you use Portainer as well, you know what to do.&lt;/p&gt;
&lt;p&gt;Otherwise, create a &lt;code&gt;docker-compose.yml&lt;/code&gt; file in a directory of your choosing with the following contents.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-0&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3.8&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;cloudflareddns&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ghcr.io/alex-oswald/cloudflareddns:main&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;CloudflareApi__ApiToken&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;api_token&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;DDNS__ZoneName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;example.com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;DDNS__DnsRecordName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;vpn.example.com&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-0&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Add your API token value, and proper Zone and DNS record names.&lt;/p&gt;
&lt;p&gt;To change the update interval from the default 15 minutes, add another environment variables named &lt;code&gt;DDNS__UpdateIntervalSeconds&lt;/code&gt;
with a value of your choosing.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;ve come this far, you know to run the following to see it work.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-1&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker-compose up&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-1&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You will start seeing logs like the following.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-2&#34;&gt;[08:29:16 INF] Starting CloudflareDDNS host
[08:29:16 INF] DDNSBackgroundService service started
[08:29:17 INF] Now listening on: http://[::]:80
[08:29:17 INF] Application started. Press Ctrl&amp;#43;C to shut down.
[08:29:17 INF] Hosting environment: Production
[08:29:17 INF] Content root path: /app
[08:29:18 INF] Public IP: *.*.*.*
[08:29:18 DBG] Get zones uri=https://api.cloudflare.com/client/v4/zones
[08:29:18 DBG] Get zone details uri=https://api.cloudflare.com/client/v4/zones/id
[08:29:18 INF] Zone info: id=id, name=example.com
[08:29:18 DBG] Get DNS records uri=https://api.cloudflare.com/client/v4/zones/id/dns_records
[08:29:19 DBG] Found DNS record vpn.example.com
[08:29:19 DBG] Your public IP matches the DNS record content. Nothing to update here. 👍
[08:29:19 INF] Waiting 900 seconds till next update... 😴&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-2&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Create a SSL certificate for your home network Part 2</title>
      <link>/blog/2022-11-25-create-a-ssl-cert-for-your-home-network-part2/</link>
      <pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-11-25-create-a-ssl-cert-for-your-home-network-part2/</guid>
      <description>
        
        
        &lt;p&gt;As a follow up to my previous post &lt;a href=&#34;https://www.alexoswald.com/2022/08/22/create-a-ssl-cert-for-your-home-network.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Create a SSL certificate for your home network&lt;/a&gt;, I&amp;rsquo;ve created a simple shell script you can to use to quickly create ssl certificates for a local domain.&lt;/p&gt;
&lt;p&gt;Create a &lt;code&gt;create_ssl.sh&lt;/code&gt; file with the following contents:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-0&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# GENERATE SSL CERTIFICATE &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# pi.lan, *.lan&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# PARAMETERS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 1: Root Password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 2: Validity in days&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 3: PFX Password&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# EXECUTION&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# chomd +x create_ssl.sh&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ./create_ssl.sh rootkeypass 365 pfxpass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Generating RSA-2048 key file &amp;#39;root.key&amp;#39;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl genrsa -des3 -passout pass:$1 -out root.key &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Generating SSL configuration file: &amp;#39;ssl.config&amp;#39;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &amp;gt;&amp;gt; ssl.config &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOL
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;default_bits = 4096
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;prompt = no
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;default_md = sha256
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;distinguished_name = dn
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[dn]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;C=US
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ST=WA
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;L=Seattle
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;O=Local LAN Cert
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;OU=Local LAN Cert
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;emailAddress=admin@pi.lan
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;CN = Local LAN Cert
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Generating Root Certificate file &amp;#39;root.pem&amp;#39;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl req -x509 -new -nodes -key root.key -sha256 -days $2 -out root.pem -passin pass:$1 -config ssl.config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Generating Certificate Extensions file &amp;#39;cert.ext&amp;#39;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat &amp;gt;&amp;gt; cert.ext &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;&amp;lt;EOL
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;authorityKeyIdentifier=keyid,issuer
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;basicConstraints=CA:FALSE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;subjectAltName = @alt_names
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;[alt_names]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;DNS.1 = *.pi.lan
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;DNS.2 = pi.lan
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;EOL&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Generating Certificate Signing Request (CSR) files &amp;#39;sslcert.csr&amp;#39;, &amp;#39;sslcert.key&amp;#39;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl req -new -sha256 -nodes -out sslcert.csr -newkey rsa:4096 -keyout sslcert.key -config ssl.config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Generating Certificate file &amp;#39;sslcert.crt&amp;#39;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl x509 -req -in sslcert.csr -CA root.pem -CAkey root.key -CAcreateserial -out sslcert.crt -days &lt;span style=&#34;color:#ae81ff&#34;&gt;365&lt;/span&gt; -sha256 -extfile cert.ext -passin pass:$1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Generating PFX file &amp;#39;sslcert.pfx&amp;#39;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl pkcs12 -export -out sslcert.pfx -inkey sslcert.key -in sslcert.crt -passout pass:$3&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-0&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Create a SSL certificate for your home network</title>
      <link>/blog/2022-08-22-create-a-ssl-cert-for-your-home-network/</link>
      <pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-08-22-create-a-ssl-cert-for-your-home-network/</guid>
      <description>
        
        
        &lt;p&gt;In this post I will explain how to create a SSL certificate for your home network and how to install the root cert onto your computers so your browsers trust it.&lt;/p&gt;
&lt;h1&gt;Why?&lt;/h1&gt;&lt;p&gt;For me, the need came after I created a docker cluster on one of my Raspberry Pi&amp;rsquo;s with a reverse proxy and wanted to expose those services with local DNS using the &lt;code&gt;pi.lan&lt;/code&gt; domain. I didn&amp;rsquo;t want to enable port forwarding and expose my services to the internet.&lt;/p&gt;
&lt;h2&gt;Generate the Root Key&lt;span class=&#34;absolute -mt-20&#34; id=&#34;generate-the-root-key&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#generate-the-root-key&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-0&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl genrsa -des3 -out root.key &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-0&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Enter a new &lt;em&gt;password&lt;/em&gt; when prompted.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-1&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pi@rp-400:~ $ openssl genrsa -des3 -out root.key &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Generating RSA private key, &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; bit long modulus &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; primes&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;....................++++
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;..................++++
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e is &lt;span style=&#34;color:#ae81ff&#34;&gt;65537&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;0x010001&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Enter pass phrase &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; root.key:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Verifying - Enter pass phrase &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; root.key:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pi@rp-400:~ $ ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root.key&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-1&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;root.key&lt;/code&gt; has now been created.&lt;/p&gt;
&lt;h2&gt;Create Root Certificate&lt;span class=&#34;absolute -mt-20&#34; id=&#34;create-root-certificate&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-root-certificate&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Adjust validity days to your liking. If you plan to access your websites with an iOS device, &lt;a href=&#34;https://support.apple.com/en-us/HT211025&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;keep the days under 398&lt;/a&gt;. 1 year is a good go to.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-2&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl req -x509 -new -nodes -key root.key -sha256 -days &lt;span style=&#34;color:#ae81ff&#34;&gt;365&lt;/span&gt; -out root.pem&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-2&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Enter your root key password when prompted. Then any other optional information. You can &lt;strong&gt;ENTER&lt;/strong&gt; through each to skip.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-3&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pi@rp-400:~ $ openssl req -x509 -new -nodes -key root.key -sha256 -days &lt;span style=&#34;color:#ae81ff&#34;&gt;365&lt;/span&gt; -out root.pem
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Enter pass phrase &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; root.key:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You are about to be asked to enter information that will be incorporated
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;into your certificate request.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;What you are about to enter is what is called a Distinguished Name or a DN.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;There are quite a few fields but you can leave some blank
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;For some fields there will be a default value,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If you enter &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;, the field will be left blank.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-----
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Country Name &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; letter code&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;AU&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;State or Province Name &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;full name&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Some-State&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Locality Name &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;eg, city&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Organization Name &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;eg, company&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Internet Widgits Pty Ltd&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Organizational Unit Name &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;eg, section&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Common Name &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;e.g. server FQDN or YOUR name&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Email Address &lt;span style=&#34;color:#f92672&#34;&gt;[]&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pi@rp-400:~ $ ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root.key  root.pem&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-3&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;root.pem&lt;/code&gt; has now been created.&lt;/p&gt;
&lt;h2&gt;Create CSR Configuration Files&lt;span class=&#34;absolute -mt-20&#34; id=&#34;create-csr-configuration-files&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-csr-configuration-files&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Create a text file named &lt;code&gt;v3.ext&lt;/code&gt; with the below contents. Add any domains to &lt;code&gt;alt_names&lt;/code&gt;. In my case, I&amp;rsquo;ve added the wildcard for &lt;code&gt;pi.lan&lt;/code&gt; (so the cert can be used with all subdomains), along with &lt;code&gt;pi.lan&lt;/code&gt; it self.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-4&#34;&gt;authorityKeyIdentifier=keyid,issuer
basicConstraints=CA:FALSE
keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
subjectAltName = @alt_names

[alt_names]
DNS.1 = *.pi.lan
DNS.2 = pi.lan&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-4&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Create a text file named &lt;code&gt;sslcert.csr.cnf&lt;/code&gt; with the below contents. Update the properties in the &lt;code&gt;dn&lt;/code&gt; section with your values.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-5&#34;&gt;[req]
default_bits = 4096
prompt = no
default_md = sha256
distinguished_name = dn

[dn]
C=US
ST=WA
L=Bellevue
O=Oswald Technologies
OU=Oswald Technologies
emailAddress=alex@oswaldtechnologies.com
CN = Oswald Technologies LAN Cert&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-5&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-6&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pi@rp-400:~ $ ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root.key  root.pem  sslcert.csr.cnf  v3.ext&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-6&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Create Certificate-Signing Request or CSR&lt;span class=&#34;absolute -mt-20&#34; id=&#34;create-certificate-signing-request-or-csr&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-certificate-signing-request-or-csr&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-7&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl req -new -sha256 -nodes -out sslcert.csr -newkey rsa:4096 -keyout sslcert.key -config sslcert.csr.cnf&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-7&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-8&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pi@rp-400:~ $ openssl req -new -sha256 -nodes -out sslcert.csr -newkey rsa:4096 -keyout sslcert.key -config sslcert.csr.cnf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Generating a RSA private key
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;..............................................................................................................++++
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.........................................................................................++++
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;writing new private key to &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sslcert.key&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-----
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pi@rp-400:~/cert_test $ ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root.key  root.pem  sslcert.csr  sslcert.csr.cnf  sslcert.key  v3.ext&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-8&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;sslcert.csr&lt;/code&gt; and &lt;code&gt;sslcert.key&lt;/code&gt; have now been created.&lt;/p&gt;
&lt;h2&gt;Create the SSL Certificate&lt;span class=&#34;absolute -mt-20&#34; id=&#34;create-the-ssl-certificate&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-the-ssl-certificate&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Create &lt;code&gt;.crt&lt;/code&gt;. In my case, this is the certificate file used by Traefik.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-9&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl x509 -req -in sslcert.csr -CA root.pem -CAkey root.key -CAcreateserial -out sslcert.crt -days &lt;span style=&#34;color:#ae81ff&#34;&gt;365&lt;/span&gt; -sha256 -extfile v3.ext&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-9&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-10&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pi@rp-400:~ $ openssl x509 -req -in sslcert.csr -CA root.pem -CAkey root.key -CAcreateserial -out sslcert.crt -days &lt;span style=&#34;color:#ae81ff&#34;&gt;365&lt;/span&gt; -sha256 -extfile v3.ext
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Signature ok
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;subject&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;C &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; US, ST &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; WA, L &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Bellevue, O &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Oswald Technologies, OU &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Oswald Technologies, emailAddress &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; alex@oswaldtechnologies.com, CN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Oswald Technologies LAN Cert
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Getting CA Private Key
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Enter pass phrase &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; root.key:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pi@rp-400:~ $ ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root.key  root.pem  root.srl  sslcert.crt  sslcert.csr  sslcert.csr.cnf  sslcert.key  v3.ext&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-10&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;sslcert.crt&lt;/code&gt; and &lt;code&gt;root.srl&lt;/code&gt; have now been created.&lt;/p&gt;
&lt;h2&gt;Create PFX File&lt;span class=&#34;absolute -mt-20&#34; id=&#34;create-pfx-file&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-pfx-file&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;If needed, you can create a &lt;code&gt;.pfx&lt;/code&gt; file from the certificate. In my case, this is the certificate file used by my .NET web applications to enable HTTPS.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-11&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openssl pkcs12 -export -out sslcert.pfx -inkey sslcert.key -in sslcert.crt -passout pass:&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-11&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-12&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pi@rp-400:~ $ openssl pkcs12 -export -out sslcert.pfx -inkey sslcert.key -in sslcert.crt -passout pass:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pi@rp-400:~ $ ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root.key  root.pem  root.srl  sslcert.crt  sslcert.csr  sslcert.csr.cnf  sslcert.key  sslcert.pfx  v3.ext&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-12&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h1&gt;Trusting the Certificates&lt;/h1&gt;&lt;h2&gt;Windows&lt;span class=&#34;absolute -mt-20&#34; id=&#34;windows&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#windows&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Add the root CA to the Windows certificate store.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-13&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certutil -addstore -f &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ROOT&amp;#34;&lt;/span&gt; root.pem&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-13&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Once added, you will be able to see it in the Certificate Manager for Local Computer and Current User. It will be under &lt;strong&gt;Trusted Root Certification Authorities -&amp;gt; Certificates&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;certmgr.png&#34; alt=&#34;certmgr&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h2&gt;Linux&lt;span class=&#34;absolute -mt-20&#34; id=&#34;linux&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#linux&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Create a folder for your cert in &lt;code&gt;ca-certificates&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-14&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir /usr/local/share/ca-certificates/&amp;lt;folder&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-14&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Copy the &lt;code&gt;pem&lt;/code&gt; file to this folder then update certificates.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-15&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo update-ca-certificates&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-15&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You will then need to manually trust the certificate in the browsers you use since the browsers use their own certificate store, and not the certficate store of the OS like in Windows.&lt;/p&gt;
&lt;h2&gt;iOS&lt;span class=&#34;absolute -mt-20&#34; id=&#34;ios&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ios&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Transfer the &lt;code&gt;pem&lt;/code&gt; file to your phone.&lt;/p&gt;
&lt;p&gt;Open the &lt;code&gt;pem&lt;/code&gt; file in the &lt;strong&gt;Files&lt;/strong&gt; app and choose to install on the iPhone (if you have a watch there will be an option to install on the watch as well).&lt;/p&gt;
&lt;p&gt;Go to &lt;strong&gt;Settings &amp;gt; General &amp;gt; VPN &amp;amp; Device Management&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Under &lt;strong&gt;Configuration Profile&lt;/strong&gt; select the cert and click &lt;strong&gt;Install&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;profile.png&#34; alt=&#34;profile&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Go to &lt;strong&gt;Settings &amp;gt; General &amp;gt; About &amp;gt; Certificate Trust Settings&lt;/strong&gt; and trust the certificate.&lt;/p&gt;
&lt;p&gt;If you picked a validity period above 398 days, you will not see the cert in &lt;strong&gt;Certificate Trust Settings&lt;/strong&gt; from my experience, and will not be able to trust it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;trust_settings.png&#34; alt=&#34;trust_settings&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;&lt;p&gt;In this post I explained how to create your own root CA and create an SSL certificate from that. I explained how to install the certificate on Windows, Linux and iOS. With these instructions, you can use HTTPS for web services running locally through a reverse proxy. Here&amp;rsquo;s some iOS screenshots of some apps I&amp;rsquo;m doing this with.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;heimdall.png&#34; alt=&#34;heimdall&#34; loading=&#34;lazy&#34; /&gt;
&lt;img src=&#34;traefik.png&#34; alt=&#34;traefik&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pihole.png&#34; alt=&#34;pihole&#34; loading=&#34;lazy&#34; /&gt;
&lt;img src=&#34;octopi.png&#34; alt=&#34;octopi&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>2022 Development/Gaming PC Build</title>
      <link>/blog/2022-08-04-pc-build/</link>
      <pubDate>Thu, 04 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-08-04-pc-build/</guid>
      <description>
        
        
        &lt;h2&gt;It&amp;rsquo;s time to build a beast of a development/gaming desktop PC in 2022!&lt;span class=&#34;absolute -mt-20&#34; id=&#34;its-time-to-build-a-beast-of-a-developmentgaming-desktop-pc-in-2022&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#its-time-to-build-a-beast-of-a-developmentgaming-desktop-pc-in-2022&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The last computer I purchased was a Surface Book 2, over 4 years ago. It did an okay job for development, but it wasn&amp;rsquo;t great for gaming, and wasn&amp;rsquo;t VR ready. The biggest flaw for development was the RAM, with only 16GB. It wasn&amp;rsquo;t great running multiple instances of Visual Studio and multiple docker containers. There were countless times I found myself needing to close a VS instance to free up memory. For this build, I wanted a higher end desktop that would be able to tackle all the development I do, and be VR ready, and not completely break the bank.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;inside_desktop.png&#34; alt=&#34;inside_desktop&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h2&gt;Requirements&lt;span class=&#34;absolute -mt-20&#34; id=&#34;requirements&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#requirements&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;VR Ready (because Half-Life: Alyx of course)&lt;/li&gt;
&lt;li&gt;12th Gen i9&lt;/li&gt;
&lt;li&gt;32GB+ DDR5 (maybe 64GB)&lt;/li&gt;
&lt;li&gt;Under $3000&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Bill of Materials&lt;span class=&#34;absolute -mt-20&#34; id=&#34;bill-of-materials&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bill-of-materials&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Here&amp;rsquo;s what I came up with. Over the course of a month after I built the PC (while my return window was still good), a few components were on sale on Amazon so I ordered the components again and returned the new components under the old orders to get the cheaper price. I was able to save $80 on the GPU and $30 on the RAM this way. Further, I got 5% back using my Amazon Prime credit card, which brought the total to almost $300 less than my budget.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Component&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Price&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Case&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://a.co/d/3xQkjX1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lian Li LANCOOL II MESH PEROFRMANCE Black LAN2MPX Tempered Glass ATX Case&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$163.07&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Motherboard&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://a.co/d/4eYEWn0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ASUS Prime Z690-P&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$210.35&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://a.co/d/bEqUEqy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Intel Core i9-12900K&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$559.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RAM&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://a.co/d/0ooxSGp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CORSAIR Vengeance DDR5 32GB (2x16GB) DDR5 5600&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$229.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GPU&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://a.co/d/8KZB8Dn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EVGA GeForce RTX 3080 FTW3&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$779.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hard Drive&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://a.co/d/9IFAaER&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SAMSUNG 980 PRO SSD with Heatsink 1TB PCIe Gen 4 NVMe M.2&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$139.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Power Supply&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://a.co/d/e7ITX19&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Seasonic PRIME TX-850, 850W 80+ Titanium&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$259.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Thermal Paste&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://a.co/d/jhax7vq&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Arctic Silver 5 AS5-3.5G&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$7.90&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CPU Cooler&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://a.co/d/gSc7RZr&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NZXT Kraken X73 360mm - RL-KRX73-01&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$157.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vertical GPU Mount&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://a.co/d/h3tlfYS&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EZDIY-FAB Vertical PCIe 4.0 GPU Mount&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$59.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bluetooth Adapter&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://a.co/d/blHiNCw&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Long Range Bluetooth Adapter for PC&lt;/a&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$14.39&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;Benchmarks&lt;/h1&gt;&lt;p&gt;I&amp;rsquo;m not a hardcore benchmarker, so I stuck to only UserBenchmark and a few real world tests.&lt;/p&gt;
&lt;h2&gt;UserBenchmark&lt;span class=&#34;absolute -mt-20&#34; id=&#34;userbenchmark&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#userbenchmark&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://www.userbenchmark.com/UserRun/54383734&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;View my latest results&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So far I&amp;rsquo;ve only clocked my RAM at 5200MHz.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UserBenchmarks&lt;/strong&gt; Game 264%, Desk 119%, Work 300%&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CPU&lt;/strong&gt; 119.2%&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GPU&lt;/strong&gt; 227.8%&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SSD&lt;/strong&gt; 401.5%&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RAM&lt;/strong&gt; 177%&lt;/p&gt;
&lt;h2&gt;Visual Studio Builds&lt;span class=&#34;absolute -mt-20&#34; id=&#34;visual-studio-builds&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#visual-studio-builds&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;For this benchmark I built one of my open source projects, &lt;a href=&#34;https://github.com/alex-oswald/WindowsFormsLifetime&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;WindowsFormsLifetime&lt;/a&gt;. This isn&amp;rsquo;t a big solution, but it&amp;rsquo;s a real world test because it represents builds I&amp;rsquo;m actually running multiple times throughout the day. Before running &lt;code&gt;dotnet build&lt;/code&gt;, I cleaned out the &lt;code&gt;obj&lt;/code&gt; and &lt;code&gt;bin&lt;/code&gt; folders to represent a fresh build.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;PC&lt;/th&gt;
&lt;th&gt;3 Run Avg&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;New Desktop&lt;/td&gt;
&lt;td&gt;1 seconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Surface Book 2&lt;/td&gt;
&lt;td&gt;8 seconds&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;3D Printer Slicing&lt;span class=&#34;absolute -mt-20&#34; id=&#34;3d-printer-slicing&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#3d-printer-slicing&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;For this benchmark I used Ultimaker Cura to slice the &lt;a href=&#34;https://www.thingiverse.com/thing:2574499&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Forbidden Tower&lt;/a&gt; with the default &lt;em&gt;Standard Quality&lt;/em&gt; settings. I didn&amp;rsquo;t want to dive into setting up a program to accuratly time the slicing, so I went the old fashion route and used a stopwatch. I have to say, the time differences here were pretty incredible.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;PC&lt;/th&gt;
&lt;th&gt;2 Run Avg&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;New Desktop&lt;/td&gt;
&lt;td&gt;7 seconds&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Surface Book 2&lt;/td&gt;
&lt;td&gt;70 seconds&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Windows Forms Lifetime</title>
      <link>/blog/2022-02-23-windows-forms-lifetime/</link>
      <pubDate>Wed, 23 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>/blog/2022-02-23-windows-forms-lifetime/</guid>
      <description>
        
        
        &lt;p&gt;This post will go over the Windows Forms Lifetime library I&amp;rsquo;ve started writing. The library is a Windows Forms hosting extension for the .NET Generic Host. It enables you to configure the generic host to use the lifetime of Windows Forms, aka when the main Form closes, the host will shut down.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/alex-oswald/WindowsFormsLifetime&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/alex-oswald/WindowsFormsLifetime&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Get started with .NET 6&amp;rsquo;s Minimal API&lt;span class=&#34;absolute -mt-20&#34; id=&#34;get-started-with-net-6s-minimal-api&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#get-started-with-net-6s-minimal-api&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Create a new &lt;strong&gt;Windows Forms App&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Change the projects SDK to &lt;code&gt;Microsoft.NET.Sdk.Web&lt;/code&gt; so we can use the &lt;code&gt;WebApplication&lt;/code&gt; class.&lt;/p&gt;
&lt;p&gt;Add &lt;code&gt;NoDefaultLaunchSettingsFile&lt;/code&gt; to the &lt;code&gt;csproj&lt;/code&gt; so a &lt;code&gt;launchSettings.json&lt;/code&gt; file isn&amp;rsquo;t created automatically for us.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-0&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;Project&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Sdk=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Microsoft.NET.Sdk.Web&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;PropertyGroup&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;OutputType&amp;gt;&lt;/span&gt;WinExe&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/OutputType&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;TargetFramework&amp;gt;&lt;/span&gt;net6.0-windows&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/TargetFramework&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;Nullable&amp;gt;&lt;/span&gt;enable&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/Nullable&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;UseWindowsForms&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/UseWindowsForms&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;ImplicitUsings&amp;gt;&lt;/span&gt;enable&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/ImplicitUsings&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;NoDefaultLaunchSettingsFile&amp;gt;&lt;/span&gt;true&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/NoDefaultLaunchSettingsFile&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/PropertyGroup&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/Project&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-0&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Replace the contents of &lt;code&gt;Program.cs&lt;/code&gt; with the following.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-1&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; WinFormsApp1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; builder = WebApplication.CreateBuilder(args);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;builder.Host.UseWindowsFormsLifetime&amp;lt;Form1&amp;gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; app = builder.Build();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app.Run();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-1&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Instantiating and Showing Forms&lt;span class=&#34;absolute -mt-20&#34; id=&#34;instantiating-and-showing-forms&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#instantiating-and-showing-forms&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Add more forms to the DI container.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-2&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; WinFormsApp1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; builder = WebApplication.CreateBuilder(args);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;builder.Host.UseWindowsFormsLifetime&amp;lt;Form1&amp;gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;builder.Services.AddTransient&amp;lt;Form2&amp;gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; app = builder.Build();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app.Run();&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-2&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To get a form use the &lt;code&gt;IFormProvider&lt;/code&gt;. The form provider instantiates an instance of the form from the DI container on the GUI thread. &lt;code&gt;IFormProvider&lt;/code&gt; has one method, &lt;code&gt;GetFormAsync&amp;lt;T&amp;gt;&lt;/code&gt; used to fetch a form instance.&lt;/p&gt;
&lt;p&gt;In this example, we inject &lt;code&gt;IFormProvider&lt;/code&gt; into the main form, and use that to instantiate a new instance of &lt;code&gt;Form&lt;/code&gt;, then show the form. Instantiating a Form directly in a nother form will also create it on the GUI thread, but using the &lt;code&gt;IFormProvider&lt;/code&gt; is best practice when using this library.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-3&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;partial&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Form1&lt;/span&gt; : Form
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;readonly&lt;/span&gt; ILogger&amp;lt;Form1&amp;gt; _logger;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;readonly&lt;/span&gt; IFormProvider _formProvider;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; Form1(ILogger&amp;lt;Form1&amp;gt; logger, IFormProvider formProvider)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        InitializeComponent();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        _logger = logger;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        _formProvider = formProvider;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; button1_Click(&lt;span style=&#34;color:#66d9ef&#34;&gt;object&lt;/span&gt; sender, EventArgs e)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        _logger.LogInformation(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Show Form2&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; form = &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; _formProvider.GetFormAsync&amp;lt;Form2&amp;gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        form.Show();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-3&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Invoking on the GUI thread&lt;span class=&#34;absolute -mt-20&#34; id=&#34;invoking-on-the-gui-thread&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#invoking-on-the-gui-thread&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Sometimes you need to invoke an action on the GUI thread. Say you want to spawn a form from a background service. Use the &lt;code&gt;IGuiContext&lt;/code&gt; to invoke
actions on the GUI thread.&lt;/p&gt;
&lt;p&gt;In this example, a form is fetched and shown every 5 seconds 5 times, in an action that is invoked on the GUI thread. This example shows how the GUI thread does not lock up during this process.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-4&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HostedService1&lt;/span&gt; : BackgroundService
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;readonly&lt;/span&gt; IFormProvider _fp;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;readonly&lt;/span&gt; IGuiContext _guiContext;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; HostedService1(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        IFormProvider formProvider,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        IGuiContext guiContext)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        _fp = formProvider;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        _guiContext = guiContext;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; Task ExecuteAsync(CancellationToken stoppingToken)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; count = &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; (!stoppingToken.IsCancellationRequested)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; Task.Delay(&lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;, stoppingToken);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (count &amp;lt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; _guiContext.InvokeAsync(&lt;span style=&#34;color:#66d9ef&#34;&gt;async&lt;/span&gt; () =&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; form = &lt;span style=&#34;color:#66d9ef&#34;&gt;await&lt;/span&gt; _fp.GetFormAsync&amp;lt;Form2&amp;gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    form.Show();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                });
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            count++;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-4&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Conclusion&lt;span class=&#34;absolute -mt-20&#34; id=&#34;conclusion&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#conclusion&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;I&amp;rsquo;ve explained that the &lt;code&gt;WindowsFormsLifetime&lt;/code&gt; library lets you use .NET&amp;rsquo;s Generic Host with Windows Forms application, and how it can control the lifetime of the application. I demonstrated how to get started using .NET 6&amp;rsquo;s Minimal API. I also showed the two main services that come with the library, the &lt;code&gt;IFormProvider&lt;/code&gt; which is used to new up forms on the GUI thread, and the &lt;code&gt;IGuiContext&lt;/code&gt; which is used to invoke actions on the GUI thread to prevent cross-thread exceptions.&lt;/p&gt;
&lt;p&gt;In a future post, I will demonstrate how to use the &lt;code&gt;WindowsFormsLifetime.Mvp&lt;/code&gt; companion library to develop Model-View-Presenter applications using Windows Forms.&lt;/p&gt;
&lt;p&gt;Until then, happy win forming!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Outlook Rule for &#39;on behalf of&#39; Emails</title>
      <link>/blog/2021-11-17-outlook-rule-for-on-behalf-of-email/</link>
      <pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/2021-11-17-outlook-rule-for-on-behalf-of-email/</guid>
      <description>
        
        
        &lt;p&gt;I get a lot of different alert emails, from Azure DevOps, AWS, etc. Setting up rules to move these emails to different folders is important for my sanity. Alert emails I typically get come from a central source, and the &lt;em&gt;on behalf of&lt;/em&gt; email is from the root source, like Azure DevOps or AWS. This post answers the question:&lt;/p&gt;
&lt;h2&gt;How do I setup an Outlook rule to filter &lt;em&gt;on behalf of&lt;/em&gt; emails?&lt;span class=&#34;absolute -mt-20&#34; id=&#34;how-do-i-setup-an-outlook-rule-to-filter-on-behalf-of-emails&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#how-do-i-setup-an-outlook-rule-to-filter-on-behalf-of-emails&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Open the &lt;strong&gt;Rules and Alerts&lt;/strong&gt; window in Outlook&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;New Rule&amp;hellip;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Next&lt;/strong&gt; to skip to the advanced setup&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;outlook_rules_1.png&#34; alt=&#34;outlook_rule_1&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Unfortuantely, we can&amp;rsquo;t create a rule for &lt;em&gt;on behalf of&lt;/em&gt; email address using the &lt;code&gt;from people or public group&lt;/code&gt;. The address is stored in the email header though, so we can search the header for the address.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select &lt;strong&gt;with specific words in the message header&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;specific words&lt;/strong&gt; in Step 2 to add the email address you want to filter on&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;outlook_rules_2.png&#34; alt=&#34;outlook_rule_2&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click &lt;strong&gt;Ok&lt;/strong&gt; to exit the &lt;strong&gt;Search Text&lt;/strong&gt; dialog&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;outlook_rules_3.png&#34; alt=&#34;outlook_rule_3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Select the folder you want to move emails to and click &lt;strong&gt;Finish&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Pi-Hole in Docker on a Raspberry Pi</title>
      <link>/blog/2021-08-08-pi-hole-in-docker-on-a-pi/</link>
      <pubDate>Sun, 08 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>/blog/2021-08-08-pi-hole-in-docker-on-a-pi/</guid>
      <description>
        
        
        &lt;p&gt;I&amp;rsquo;ve been wanting to setup Pi-Hole in my house for quite some time and I finally got around to getting it done. It has been working great so far, blocking an average of 15-20% of requests. This blog post explains how I&amp;rsquo;m running Pi-Hole via Docker on a Raspberry Pi.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m dedicating a Raspberry Pi 4 to the task. With all the Docker work I&amp;rsquo;ve been doing lately, I decided to run Pi-Hole in a container, and you can too.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;VPN Notice&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you use a VPN, remember to disable options to only use their DNS servers. If you do not, devices connected to a VPN using their DNS servers will not see the benefit of Pi-Hole.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Prerequisites&lt;span class=&#34;absolute -mt-20&#34; id=&#34;prerequisites&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#prerequisites&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Raspberry Pi 4 Model B&lt;/li&gt;
&lt;li&gt;Micro SD card 8GB or larger&lt;/li&gt;
&lt;li&gt;SSH public key &lt;a href=&#34;https://www.raspberrypi.org/documentation/remote-access/ssh/passwordless.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;read Raspberry Pi&amp;rsquo;s docs how&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Prepare the Raspberry Pi SD card&lt;span class=&#34;absolute -mt-20&#34; id=&#34;prepare-the-raspberry-pi-sd-card&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#prepare-the-raspberry-pi-sd-card&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;First, we are going to prepare the SD card by downloading/installing Raspberry Pi Imager, and imaging our card. We will set up Wifi and SSH through the imager so we don&amp;rsquo;t need to do it manually later.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.raspberrypi.org/software/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.raspberrypi.org/software/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Run the imager once installed.&lt;/p&gt;
&lt;p&gt;Image with Raspberry Pi OS Lite (32-bit)&lt;/p&gt;
&lt;p&gt;Press &lt;code&gt;Ctrl+Shift+X&lt;/code&gt; to open &lt;em&gt;Advanced options&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Set a hostname, I named mine &lt;code&gt;rp-pihole&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enter your ssh public key&lt;/li&gt;
&lt;li&gt;Configure Wifi&lt;/li&gt;
&lt;li&gt;Set locale settings&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;pihole-2.png&#34; alt=&#34;pihole-2&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Install the SD card into the Pi and power it on.&lt;/p&gt;
&lt;h2&gt;Remote into the Pi&lt;span class=&#34;absolute -mt-20&#34; id=&#34;remote-into-the-pi&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#remote-into-the-pi&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The Pi should be fully booted after a few minutes. Now we can SSH in.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-0&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh pi@rp-pihole&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-0&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Where &lt;code&gt;pi&lt;/code&gt; is the username and &lt;code&gt;rp-pihole&lt;/code&gt; is the hostname.&lt;/p&gt;
&lt;p&gt;Now that we are in, we need to &lt;em&gt;update &amp;amp; upgrade&lt;/em&gt;, then install docker &amp;amp; docker compose.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-1&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get upgrade&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-1&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Install docker&lt;span class=&#34;absolute -mt-20&#34; id=&#34;install-docker&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#install-docker&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Download the Docker installation script &amp;amp; execute it.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/docker/docker-install/blob/master/install.sh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/docker/docker-install/blob/master/install.sh&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-2&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -fsSL https://get.docker.com -o get-docker.sh &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo sh get-docker.sh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-2&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We can delete the file now.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-3&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm get-docker.sh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-3&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Setup non-root user to Docker group so we can execute docker without &lt;code&gt;sudo&lt;/code&gt;. Logout and back in so changes take affect.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-4&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo usermod -aG docker pi
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;logout&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-4&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Check the version to verify installation. If you don&amp;rsquo;t see info for the Docker Engine, you may need to reboot the device.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-5&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker version&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-5&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You will see something similar to:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-6&#34;&gt;Client:
 Cloud integration: 1.0.17
 Version:           20.10.7
 API version:       1.41
 Go version:        go1.16.4
 Git commit:        f0df350
 Built:             Wed Jun  2 12:00:56 2021
 OS/Arch:           windows/amd64
 Context:           desktop-linux
 Experimental:      true

Server: Docker Engine - Community
 Engine:
  Version:          20.10.7
  API version:      1.41 (minimum version 1.12)
  Go version:       go1.13.15
  Git commit:       b0f5bc3
  Built:            Wed Jun  2 11:54:58 2021
  OS/Arch:          linux/amd64
  Experimental:     false
 containerd:
  Version:          1.4.6
  GitCommit:        d71fcd7d8303cbf684402823e425e9dd2e99285d
 runc:
  Version:          1.0.0-rc95
  GitCommit:        b9ee9c6314599f1b4a7f497e1f1f856fe433d3b7
 docker-init:
  Version:          0.19.0
  GitCommit:        de40ad0&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-6&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Install docker compose&lt;span class=&#34;absolute -mt-20&#34; id=&#34;install-docker-compose&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#install-docker-compose&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-7&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install -y python3-pip libffi-dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo pip3 install docker-compose&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-7&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Check the version to verify installation.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-8&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker-compose version&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-8&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;You will see something similar to:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-9&#34;&gt;docker-compose version 1.29.2, build 5becea4c
docker-py version: 5.0.0
CPython version: 3.9.0
OpenSSL version: OpenSSL 1.1.1g  21 Apr 2020&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-9&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;Create our files&lt;span class=&#34;absolute -mt-20&#34; id=&#34;create-our-files&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-our-files&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;On our dev machine, we will create two files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt; - Our compose file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.env&lt;/code&gt; - The environment variables file&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Create the environment variables file&lt;span class=&#34;absolute -mt-20&#34; id=&#34;create-the-environment-variables-file&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-the-environment-variables-file&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Create a &lt;code&gt;.env&lt;/code&gt; file with the contents:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-10&#34;&gt;PIHOLE_IPADDRESS=10.10.10.2
PIHOLE_HOST=pi.hole
PIHOLE_TIMEZONE=America/Los_Angeles
PIHOLE_WEBPASSWORD=&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-10&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code&gt;PIHOLE_IPADDRESS&lt;/code&gt; - This is the IP address of the Pi running Pi-Hole (it should be statically reserved by your router).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PIHOLE_HOST&lt;/code&gt; - The host used to access the admin console.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PIHOLE_TIMEZONE&lt;/code&gt; - Your timezone.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PIHOLE_WEBPASSWORD&lt;/code&gt; - Password for the admin console.&lt;/p&gt;
&lt;h3&gt;Create the compose file&lt;span class=&#34;absolute -mt-20&#34; id=&#34;create-the-compose-file&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-the-compose-file&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Create a &lt;code&gt;docker-compose.yml&lt;/code&gt; file with the contents:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-11&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;version&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;3.9&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;services&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;pihole&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;container_name&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pihole&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;image&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pihole/pihole:latest&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;restart&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;unless-stopped&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;network_mode&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;host&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;environment&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;ServerIP&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${PIHOLE_IPADDRESS}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;VIRTUAL_HOST&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${PIHOLE_HOST}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;TZ&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${PIHOLE_TIMEZONE}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;WEBPASSWORD&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${PIHOLE_WEBPASSWORD}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;DNSMASQ_LISTENING&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;all&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;DNS1&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;DNS2&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;1.1.1.1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pihole-data:/etc/pihole/&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pihole-dnsmasq:/etc/dnsmasq.d/&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;cap_add&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;NET_ADMIN&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;volumes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;pihole-data&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;pihole-dnsmasq:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-11&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The above configuration allows Pi-Hole&amp;rsquo;s DHCP server to work properly on my network.&lt;/p&gt;
&lt;h2&gt;Copy files to the Pi&lt;span class=&#34;absolute -mt-20&#34; id=&#34;copy-files-to-the-pi&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#copy-files-to-the-pi&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Open a terminal in the directory of the files you just created. Run secure copy to copy the &lt;code&gt;.env&lt;/code&gt; and &lt;code&gt;docker-compose.yml&lt;/code&gt; files to the Pi.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-12&#34;&gt;scp -r .\.env .\docker-compose.yml pi@rp-pihole:/home/pi&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-12&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2&gt;On the Pi&amp;hellip;&lt;span class=&#34;absolute -mt-20&#34; id=&#34;on-the-pi&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#on-the-pi&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The next step is simple, fire up Pi-Hole!&lt;/p&gt;
&lt;p&gt;Run docker compose&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-13&#34;&gt;docker-compose up -d&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-13&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Check container status or Pi-Holes logs if you wish:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-14&#34;&gt;docker ps
docker logs pihole&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-14&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Give it a minute to start up and you should now be able to visit the admin console in a web browser. &lt;a href=&#34;http://pi.hole&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://pi.hole&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Start the DHCP server&lt;span class=&#34;absolute -mt-20&#34; id=&#34;start-the-dhcp-server&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#start-the-dhcp-server&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;To enable the DHCP server you must &lt;strong&gt;first&lt;/strong&gt; disable your routers DHCP server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In Pi-Hole&amp;rsquo;s admin console, go to Settings, then to the DHCP tab.&lt;/p&gt;
&lt;p&gt;Check &lt;code&gt;DHCP server enabled&lt;/code&gt; and click &lt;code&gt;Save&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Once enabled, it may take some time for devices IP address leases to expire, and ask Pi-Hole&amp;rsquo;s DHCP server for a new IP address. Once they do, the devices will show up in the &lt;code&gt;DHCP leases&lt;/code&gt; section of the page.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pihole-1.png&#34; alt=&#34;pihole-1&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h2&gt;Success&lt;span class=&#34;absolute -mt-20&#34; id=&#34;success&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#success&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Once devices start requiring IP addresses from Pi-Hole&amp;rsquo;s DHCP server, Pi-Hole will start doing its magic and blocking a ton of ad and metric sites.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pihole-3.png&#34; alt=&#34;pihole-3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h2&gt;Troubleshooting&lt;span class=&#34;absolute -mt-20&#34; id=&#34;troubleshooting&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#troubleshooting&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;I was having an issue where my pihole device would loose its DHCP reservartion after 24 hours and the device wouldn&amp;rsquo;t assign itself a static IP so it would get assigned a random IP which caused DNS to stop working on the network and everything connected to break. The Raspberry Pi running pihole may need some additional configuration to make sure it assigns itself with the same static IP. To do this, edit &lt;code&gt;dhcpcd.conf&lt;/code&gt; with the following command:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-15&#34;&gt;sudo nano /etc/dhcpcd.conf&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-15&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Add the following:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-16&#34;&gt;# It is possible to fall back to a static IP if DHCP fails:
# define static profile
profile static_eth0
static ip_address=10.10.10.2/24
static routers=10.10.10.1
static domain_name_servers=10.10.10.1

# fallback to static profile on eth0
interface eth0
fallback static_eth0&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-16&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Where 10.10.10.1 is the routers IP address, and 10.10.10.2 is Pi-Holes IP address.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are using the wireless interface &lt;code&gt;wlan0&lt;/code&gt;, replace instances of &lt;code&gt;eth0&lt;/code&gt; with &lt;code&gt;wlan0&lt;/code&gt;. Don&amp;rsquo;t forget to check your compose file, &lt;code&gt;DNSMASQ_LISTENING&lt;/code&gt; should be set to the interface you are using or set to &lt;code&gt;all&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Thank you&lt;span class=&#34;absolute -mt-20&#34; id=&#34;thank-you&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#thank-you&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Check out my home infrastructure repo to see what I&amp;rsquo;m running!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/alex-oswald/HomeInfra&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/alex-oswald/HomeInfra&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More specifically for Pi-Hole!&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/alex-oswald/HomeInfra/tree/main/pi-hole&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/alex-oswald/HomeInfra/tree/main/pi-hole&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s all for this post. Hopefully you enjoyed this quick tutorial on setting up Pi-Hole in Docker on a Raspberry Pi.&lt;/p&gt;
&lt;p&gt;If you have any comments, please feel free to email me at &lt;a href=&#34;mailto:alex@oswaldtechnologies.com&#34; &gt;alex@oswaldtechnologies.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;-Alex&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Creating a Static Blog with Jekyll, Dev Containers &amp; Azure CDN!</title>
      <link>/blog/2020-10-28-creating-my-static-blog-site/</link>
      <pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/blog/2020-10-28-creating-my-static-blog-site/</guid>
      <description>
        
        
        &lt;p&gt;I&amp;rsquo;ve always wanted to create my own blog to share my solutions to different coding problems I&amp;rsquo;ve experienced over the years. I&amp;rsquo;ve finally made time to create one, so here is how I did it.&lt;/p&gt;
&lt;p&gt;I started with a few requirements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Static site generator - I wanted to use a static site generator for its simplicity and speed benefits.&lt;/li&gt;
&lt;li&gt;Custom domain - Use the domain I purchased: &lt;code&gt;alexoswald.com&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fast &amp;amp; secure - It needs to be secure and fast, with caching.&lt;/li&gt;
&lt;li&gt;Cheap, less than $50 per year - The domain is $20 a year from GoDaddy with privacy. That leaves $30 for hosting and security.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am a Microsoft fan and .NET fanatic so I will most always utilize their tools.
Another few requirements regarding personal preferences:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Azure DevOps for version control&lt;/li&gt;
&lt;li&gt;Azure Pipelines for builds and release deployments&lt;/li&gt;
&lt;li&gt;Azure CDN&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this guide, we will setup Azure to host a blog via Azure CDN. We will use Jekyll to generate our static site. Since we don&amp;rsquo;t want to deal with installing Ruby or Jekyll, we will develop the site in Visual Studio Code using dev containers. With dev containers, we can develop inside a container that already has Ruby and Jekyll installed.&lt;/p&gt;
&lt;h2&gt;Prerequisites&lt;span class=&#34;absolute -mt-20&#34; id=&#34;prerequisites&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#prerequisites&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Azure subscription&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Azure DevOps&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A custom domain&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Visual Studio Code with the &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Remote - Containers&lt;/a&gt; extension&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Docker Desktop&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Create a resource group in Azure&lt;span class=&#34;absolute -mt-20&#34; id=&#34;create-a-resource-group-in-azure&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-a-resource-group-in-azure&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Create a resource group in Azure that will hold all of the blogs resources. In this instance, I&amp;rsquo;m naming the resource group &lt;code&gt;AlexsBlogResourceGroup&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Setup storage account in Azure&lt;span class=&#34;absolute -mt-20&#34; id=&#34;setup-storage-account-in-azure&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#setup-storage-account-in-azure&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Create&lt;/strong&gt; a storage account in Azure&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;create-storage-account.png&#34; alt=&#34;create-storage-account&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In the storage account, go to &lt;strong&gt;Static website&lt;/strong&gt;. Set the &lt;code&gt;Static website&lt;/code&gt;
option to &lt;code&gt;Enabled&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Set &lt;strong&gt;Index document name&lt;/strong&gt; to &lt;code&gt;index.html&lt;/code&gt; (generated by Jekyll).&lt;/p&gt;
&lt;p&gt;Set &lt;strong&gt;Error document path&lt;/strong&gt; to &lt;code&gt;404.html&lt;/code&gt; (generated by Jekyll).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Save&lt;/strong&gt; the change.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;storage-static-website.png&#34; alt=&#34;storage-static-website&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;Primary endpoint&lt;/code&gt; will be used in the next step.&lt;/p&gt;
&lt;p&gt;Visit &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Access keys&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;key1&lt;/strong&gt; will be used in the Azure pipeline to access the storage account.&lt;/p&gt;
&lt;h3&gt;Create Azure CDN endpoint&lt;span class=&#34;absolute -mt-20&#34; id=&#34;create-azure-cdn-endpoint&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-azure-cdn-endpoint&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;While viewing the storage account resource, under &lt;strong&gt;Blob service&lt;/strong&gt;, go to &lt;strong&gt;Azure CDN&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;From here, we are going to create a new &lt;code&gt;Endpoint&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For &lt;strong&gt;CDN profile&lt;/strong&gt;, select &lt;strong&gt;Create new&lt;/strong&gt;, with the name of your choosing.&lt;/p&gt;
&lt;p&gt;Set the &lt;strong&gt;Pricing tier&lt;/strong&gt; to &lt;strong&gt;Premium Verizon&lt;/strong&gt; so we can set HTTP rules later.&lt;/p&gt;
&lt;p&gt;Set the &lt;strong&gt;Origin hostname&lt;/strong&gt; to the static website &lt;code&gt;Primary endpoint&lt;/code&gt; from above.&lt;/p&gt;
&lt;p&gt;Enter the &lt;strong&gt;CDN endpoint name&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Click &lt;strong&gt;Create&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;create-azure-cdn-endpoint.png&#34; alt=&#34;create-azure-cdn-endpoint&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Navigate to the newely created resource.&lt;/p&gt;
&lt;p&gt;Navigate to &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Origin&lt;/strong&gt; and deselect &lt;strong&gt;HTTP&lt;/strong&gt;. We only want to allow HTTPS.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;endpoint-disable-http.png&#34; alt=&#34;endpoint-disable-http&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h2&gt;Create project in Azure DevOps&lt;span class=&#34;absolute -mt-20&#34; id=&#34;create-project-in-azure-devops&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-project-in-azure-devops&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Login to your DevOps account: &lt;a href=&#34;https://dev.azure.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://dev.azure.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Add a new project, making sure &lt;em&gt;Version control&lt;/em&gt; is set to &lt;strong&gt;Git&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Navigate to &lt;strong&gt;Repos&lt;/strong&gt; &amp;gt; &lt;strong&gt;Files&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Now we are going to &lt;strong&gt;Clone in VS Code&lt;/strong&gt; for next steps.&lt;/p&gt;
&lt;h2&gt;Use Jekyll to generate the site inside a Dev Container&lt;span class=&#34;absolute -mt-20&#34; id=&#34;use-jekyll-to-generate-the-site-inside-a-dev-container&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#use-jekyll-to-generate-the-site-inside-a-dev-container&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/docs/remote/containers-tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out Microsoft&amp;rsquo;s dev containers tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We have an empty repo now open in VS Code. To get started, lets get our dev container running. To do this,
open the &lt;code&gt;Command Palette&lt;/code&gt; and run the task &lt;code&gt;Remote-Containers: Open Folder in Container&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;open-folder-dev-container.png&#34; alt=&#34;open-folder-dev-container&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Select your repo folder. Once you do this, VS Code will ask you to choose the correct configuration files.&lt;/p&gt;
&lt;p&gt;We will select &lt;code&gt;Jeykll&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;jekyll-dev-container-template.png&#34; alt=&#34;jekyll-dev-container-template&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This will automatically create the dev containers config file, Dockerfile, and VS Code tasks for Jekyll.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve made a few small modifications to the configuration files.&lt;/p&gt;
&lt;p&gt;In the dev container Dockerfile lets uncomment the section to update and install other packages. I&amp;rsquo;d like to install git as well.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-0&#34;&gt;RUN apt-get update &amp;amp;&amp;amp; export DEBIAN_FRONTEND=noninteractive \
    &amp;amp;&amp;amp; apt-get -y install git&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-0&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We also want the bundler to install packages after the dev container is created. To do this, open &lt;code&gt;devcontainer.json&lt;/code&gt; and uncomment the line &lt;code&gt;&amp;quot;postCreateCommand&amp;quot;: &amp;quot;bundle install&amp;quot;,&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you don&amp;rsquo;t already have the proper &lt;code&gt;.gitignore&lt;/code&gt; file in your project directory, create one with the following contents (this file was generated for me by Azure Devops):&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code id=&#34;code-block-1&#34;&gt;_site
.sass-cache
.jekyll-cache
.jekyll-metadata&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-1&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Your development environment is now running in a container so lets get down to business and create our Jekyll site.&lt;/p&gt;
&lt;p&gt;Open a terminal window. Since our dev environment is running in a container with Linux, we are presented with a bash terminal.&lt;/p&gt;
&lt;p&gt;Create a new Jekyll site in the current folder.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-2&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;jekyll new ./&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-2&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Jekyll will create the site, and a &lt;code&gt;Gemfile&lt;/code&gt;. Then it will run &lt;code&gt;bundle install&lt;/code&gt; to install the gems specified in the &lt;code&gt;Gemfile&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Your projects file structure should now be similar to the following. Items in green were created by Jekyll.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;jekyll-new-file-structure.png&#34; alt=&#34;jekyll-new-file-structure&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now we are going to build and run the site to check it out. We can manually execute the commands, or use one of the two VS Code tasks that were created for us in &lt;code&gt;tasks.json&lt;/code&gt;. Lets run the &lt;code&gt;Serve&lt;/code&gt; task. Open the &lt;code&gt;Command Palette&lt;/code&gt; and
search/click &lt;code&gt;Tasks: Run Task&lt;/code&gt;, then click &lt;code&gt;Serve&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;After your site is built, navigate to &lt;a href=&#34;http://localhost:4000/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://localhost:4000/&lt;/a&gt; in a browser.&lt;/p&gt;
&lt;p&gt;Voilà, we now have a generated static website!&lt;/p&gt;
&lt;h2&gt;Create a build pipeline&lt;span class=&#34;absolute -mt-20&#34; id=&#34;create-a-build-pipeline&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-a-build-pipeline&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;We are going to create a build pipeline in Azure DevOps so the site is built each time a push is made to the master or a tag is created. The built site is stored as an Artifact and can be used in other pipelines.&lt;/p&gt;
&lt;p&gt;Navigate to &lt;strong&gt;Pipelines&lt;/strong&gt; &amp;gt; &lt;strong&gt;Pipelines&lt;/strong&gt; and click &lt;strong&gt;Create Pipeline&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;You will be asked where your code is. Select &lt;strong&gt;Azure Repos Git&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Then select your repository.&lt;/p&gt;
&lt;p&gt;Choose the &lt;strong&gt;Starter pipeline&lt;/strong&gt;. Now replace its contents with this yaml:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-3&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# azure-pipelines.yaml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Trigger pipeline on any push to master and any tag creations&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;trigger&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;include&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#ae81ff&#34;&gt;master&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;tags&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;include&lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Build on Ubuntu pool&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;pool&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;vmImage&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ubuntu-latest&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Use Ruby&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;task&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;UseRubyVersion@0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;displayName&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Use Ruby &amp;gt;= 2.5&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;inputs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;versionSpec&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;gt;= 2.5&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Install Jekyll&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;gem install jekyll bundler&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;displayName&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Install Jekyll and bundler&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Install Jekyll dependency&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bundle install&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;displayName&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Install Gems&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Run Jekyll and build the site&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;script&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bundle exe jekyll build&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;displayName&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Build&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Copy packaged site to the staging directory for publishing&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;task&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;CopyFiles@2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;displayName&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Copy &amp;#34;_site&amp;#34; to staging directory&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;inputs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;SourceFolder&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_site&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;TargetFolder&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$(Build.ArtifactStagingDirectory)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Publish the artifact&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;task&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;PublishBuildArtifacts@1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;displayName: &amp;#39;Publish Artifact&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;_site&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;inputs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;ArtifactName&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_site&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-3&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Click &lt;strong&gt;Save and run&lt;/strong&gt;, specify commit message and options, then click &lt;strong&gt;Save and run&lt;/strong&gt; again.&lt;/p&gt;
&lt;h2&gt;Create a Release Pipeline&lt;span class=&#34;absolute -mt-20&#34; id=&#34;create-a-release-pipeline&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-a-release-pipeline&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Our site is built and stored in DevOps as an Artifact, waiting to be deployed. We will create a release pipeline
that will deploy our site to Azure.&lt;/p&gt;
&lt;p&gt;Navigate to &lt;strong&gt;Pipelines&lt;/strong&gt; &amp;gt; &lt;strong&gt;Releases&lt;/strong&gt; and click &lt;strong&gt;New pipeline&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Select &lt;strong&gt;Empty job&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;create-release-pipeline1.png&#34; alt=&#34;create-release-pipeline1&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Click &lt;strong&gt;X&lt;/strong&gt; to close the Stage pane.&lt;/p&gt;
&lt;p&gt;Click &lt;strong&gt;Add an artifact&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Choose &lt;em&gt;Build&lt;/em&gt;, select your &lt;em&gt;Project&lt;/em&gt;, then select the build pipeline we created previously as the &lt;em&gt;Source&lt;/em&gt;. Click &lt;strong&gt;Add&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;create-release-pipeline2.png&#34; alt=&#34;create-release-pipeline2&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We have now added the artifact so it can be used by the pipeline.&lt;/p&gt;
&lt;p&gt;Under &lt;em&gt;Stage 1&lt;/em&gt;, click &lt;strong&gt;1 job, 0 task&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;create-release-pipeline3.png&#34; alt=&#34;create-release-pipeline3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h3&gt;Add tasks&lt;span class=&#34;absolute -mt-20&#34; id=&#34;add-tasks&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#add-tasks&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;We have two new tasks to add.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The first task is to Sync the files in the Artifact with your static website container in the Azure Storage account specified. Click the &lt;strong&gt;+&lt;/strong&gt; to add a new task.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;create-release-pipeline4.png&#34; alt=&#34;create-release-pipeline4&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Add an &lt;code&gt;Azure CLI&lt;/code&gt; task.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;create-release-pipeline5.png&#34; alt=&#34;create-release-pipeline5&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Configure the task:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Update &lt;strong&gt;Display name&lt;/strong&gt; to &lt;strong&gt;Sync files&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Set &lt;strong&gt;Azure Resource Manager connection&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Set &lt;strong&gt;Script Type&lt;/strong&gt; to &lt;strong&gt;Batch&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Set &lt;strong&gt;Script Location&lt;/strong&gt; to &lt;strong&gt;Inline script&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Set the &lt;strong&gt;Inline Script&lt;/strong&gt; to the following:&lt;/li&gt;
&lt;li&gt;Set the &lt;strong&gt;Working Directory&lt;/strong&gt;. Click the &lt;strong&gt;&amp;hellip;&lt;/strong&gt; button and select the build folder.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;purge-set-working-directory.png&#34; alt=&#34;purge-set-working-directory&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-4&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;az storage blob sync --source $(source) --container $(containerName) --account-name $(storageAccount) --account-key $(key)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-4&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Task example yaml:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-5&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# This code syncs with the storage blob you specify&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# It won&amp;#39;t delete all files, then upload. It will &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# upload only what is needed, and only delete what&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# is needed.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;task&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;AzureCLI@1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;displayName&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Sync files&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;inputs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;azureSubscription&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$(subscription)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;scriptLocation&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;inlineScript&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;inlineScript&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;az storage blob sync --source $(source) --container $(containerName) --account-name $(storageAccount) --account-key $(key)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;workingDirectory&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$(System.DefaultWorkingDirectory)/_MyBlog&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-5&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&#34;create-release-pipeline6.png&#34; alt=&#34;create-release-pipeline6&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;The second task is to Purge the CDN of all cached files so the new site is pulled and cached.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Add another &lt;code&gt;Azure CLI&lt;/code&gt; task.&lt;/p&gt;
&lt;p&gt;Configure the task:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Update &lt;strong&gt;Display name&lt;/strong&gt; to &lt;strong&gt;Purge CDN&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Set &lt;strong&gt;Azure Resource Manager connection&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Set &lt;strong&gt;Script Type&lt;/strong&gt; to &lt;strong&gt;Batch&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Set &lt;strong&gt;Script Location&lt;/strong&gt; to &lt;strong&gt;Inline script&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Set the &lt;strong&gt;Inline Script&lt;/strong&gt; to the following:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-6&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;az cdn endpoint purge --profile-name $(cdnProfile) --content-paths /* --name $(endpointName) --resource-group $(resourceGroup)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-6&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Task example yaml:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div id=&#34;code-block-7&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Purges the CDN&amp;#39;s cache so it has to fetch new (updated)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# content from the storage container&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;task&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;AzureCLI@1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;displayName&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Purge CDN&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;inputs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;azureSubscription&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$(subscription)&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;scriptLocation&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;inlineScript&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;inlineScript&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;az cdn endpoint purge --profile-name $(cdnProfile) --content-paths /* --name $(endpointName) --resource-group $(resourceGroup)&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
      data-clipboard-target=&#34;#code-block-7&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Add variables&lt;span class=&#34;absolute -mt-20&#34; id=&#34;add-variables&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#add-variables&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Both of our tasks use multiple variables we need to define. While still editing Release, click &lt;strong&gt;Variables&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Add the following variables:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sync files&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;source&lt;/em&gt;: Folder name in the artifact that contains the site, &lt;code&gt;_site&lt;/code&gt; for Jekyll&lt;/p&gt;
&lt;p&gt;&lt;em&gt;containerName&lt;/em&gt;:  $web (set by Azure)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;storageAccount&lt;/em&gt;:  The name of your storage account&lt;/p&gt;
&lt;p&gt;&lt;em&gt;key&lt;/em&gt;: Access key to your storage account&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Purge CDN&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;cdnProfile&lt;/em&gt;: The name of the CDN Profile used by the Endpoint resource&lt;/p&gt;
&lt;p&gt;&lt;em&gt;endpointName&lt;/em&gt;: The name of the Endpoint&lt;/p&gt;
&lt;p&gt;&lt;em&gt;resourceGroup&lt;/em&gt;: The name of the Resource Group that contains the Endpoint&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;create-release-pipeline7.png&#34; alt=&#34;create-release-pipeline7&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Make sure to Save your pipeline&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;Create a release&lt;span class=&#34;absolute -mt-20&#34; id=&#34;create-a-release&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#create-a-release&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;In the top right next to the Save button you just clicked, click &lt;strong&gt;Create release&lt;/strong&gt;, after the dialog shows, click &lt;strong&gt;Create&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;This process may take a few minutes. Once complete, open a browser and navigate to the storage accounts &lt;code&gt;Primary endpoint&lt;/code&gt; you wrote down previously. You can also access the site via the CDN endpoint we created. The site will be &lt;code&gt;https://endpointname.azureedge.net&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Your site should now be deployed! Horray!&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Setup custom domain&lt;span class=&#34;absolute -mt-20&#34; id=&#34;setup-custom-domain&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#setup-custom-domain&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Add DNS records to domain&lt;span class=&#34;absolute -mt-20&#34; id=&#34;add-dns-records-to-domain&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#add-dns-records-to-domain&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;In order to setup our custom domains Azure needs to verify you own the domain so we need to setup some CNAME records that Azure can verify.&lt;/p&gt;
&lt;p&gt;Go to your domain providers DNS management page.&lt;/p&gt;
&lt;p&gt;Add a CNAME with &lt;strong&gt;Host&lt;/strong&gt; &lt;code&gt;cdnverify.www&lt;/code&gt; and &lt;strong&gt;Value&lt;/strong&gt; &lt;code&gt;cdnverify.endpointname.azureedge.net&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add a CNAME with &lt;strong&gt;Host&lt;/strong&gt; &lt;code&gt;www&lt;/code&gt; and &lt;strong&gt;Value&lt;/strong&gt; &lt;code&gt;endpointname.azureedge.net&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m using GoDaddy for my domains.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;cname-records.png&#34; alt=&#34;cname-records&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h3&gt;Add custom domain to the CDN endpoint&lt;span class=&#34;absolute -mt-20&#34; id=&#34;add-custom-domain-to-the-cdn-endpoint&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#add-custom-domain-to-the-cdn-endpoint&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Navigate to the Azure CDN Endpoint resource.&lt;/p&gt;
&lt;p&gt;Navigate to &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Custom domains&lt;/strong&gt; &amp;gt; &lt;strong&gt;+ Custom domain&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;add-custom-domain-to-endpoint.png&#34; alt=&#34;add-custom-domain-to-endpoint&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Fill in your &lt;code&gt;www&lt;/code&gt; subdomain. If Azure is able to verify your CNAME record you will see the green check, otherwise there will be a red X.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;add-a-custom-domain.png&#34; alt=&#34;add-a-custom-domain&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now we need to enable HTTPS for the hostname.&lt;/p&gt;
&lt;p&gt;Click your custom domain.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;endpoint-custom-domains.png&#34; alt=&#34;endpoint-custom-domains&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Set &lt;strong&gt;Custom domain HTTPS&lt;/strong&gt; to &lt;strong&gt;On&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I am using Azure&amp;rsquo;s free certificates so I set &lt;strong&gt;Certificate management type&lt;/strong&gt; to &lt;strong&gt;CDN managed&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Then click &lt;strong&gt;Save&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;enable-custom-domain-https.png&#34; alt=&#34;enable-custom-domain-https&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In my experience, the certificate deployment process can take 6-8 hours to complete.&lt;/p&gt;
&lt;p&gt;Once complete, the screen should look like the below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https-successfully-enabled.png&#34; alt=&#34;https-successfully-enabled&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;&lt;br&gt;
I was able to get my apex domain added as a custom domain to my Azure CDN endpoint, but Azure no longer supports using their free SSL certificates for apex domains. The solution I decided on involves setting up Azure CDN using the &lt;code&gt;www&lt;/code&gt; subdomain and then forwarding requests to the apex domain to the www subdomain. While I personally dislike having to use the &lt;code&gt;www&lt;/code&gt; subdomain at all, it is providing me a free SSL certificate.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here is the error I got trying to add an endpoint for the apex domain.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;azure-cdn-apex-https-fail.png&#34; alt=&#34;azure-cdn-apex-https-fail&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h2&gt;Setup HTTP rules for the CDN endpoint&lt;span class=&#34;absolute -mt-20&#34; id=&#34;setup-http-rules-for-the-cdn-endpoint&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#setup-http-rules-for-the-cdn-endpoint&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;There are some HTTP rules we want to set up to provide for better security and a better experience.&lt;/p&gt;
&lt;p&gt;Navigate to your &lt;strong&gt;CDN profile&lt;/strong&gt; resource and click &lt;strong&gt;Manage&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;cdnprofile-manage.png&#34; alt=&#34;Screenshot&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Then go to &lt;strong&gt;HTTP Large&lt;/strong&gt; &amp;gt; &lt;strong&gt;Rules Engine V4.0&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I won&amp;rsquo;t go into detail on how to setup policys, as you can check the &lt;a href=&#34;https://docs.vdms.com/cdn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We will prefix the &lt;strong&gt;Source&lt;/strong&gt; to &lt;code&gt;/80&lt;/code&gt; since we are using a custom domain. &lt;a href=&#34;https://docs.vdms.com/cdn/Content/HTTP_and_HTTPS_Data_Delivery/Accessing_Your_Content.htm#CAP&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Here are the docs.&lt;/a&gt; The next 5 characters is your account id. It should be in the top right corner in parenthesis of the CDN management page. The next part of the source is your CDN endpoint&amp;rsquo;s name.&lt;/p&gt;
&lt;h3&gt;Redirect HTTP to HTTPS&lt;span class=&#34;absolute -mt-20&#34; id=&#34;redirect-http-to-https&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#redirect-http-to-https&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Any request to &lt;code&gt;http&lt;/code&gt; will be redirected to use &lt;code&gt;https&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add a new rule.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;Request&lt;/code&gt; &lt;code&gt;Request Scheme&lt;/code&gt; matches &lt;code&gt;http&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add feature.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Feature&lt;/strong&gt; &lt;code&gt;URL&lt;/code&gt; &lt;code&gt;URL Redirect&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Source&lt;/strong&gt; &lt;code&gt;/80{act}/{endpoint-name}/(.*)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Destination&lt;/strong&gt; &lt;code&gt;https://www.alexoswald.com/$1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Code&lt;/strong&gt; &lt;code&gt;301&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http-https.png&#34; alt=&#34;http-https&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h3&gt;Caching&lt;span class=&#34;absolute -mt-20&#34; id=&#34;caching&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#caching&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Cache content for 1 year on the server and 1 day on the client. Each time I update the site I purge the CDN, so I want the internal cache to be longer than the longest potential time between blog posts.&lt;/p&gt;
&lt;p&gt;Add a new rule.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;General&lt;/code&gt; &lt;code&gt;Always&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add feature.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Feature&lt;/strong&gt; &lt;code&gt;Caching&lt;/code&gt; &lt;code&gt;Default Internal Max-Age&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; &lt;code&gt;200&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Value&lt;/strong&gt; &lt;code&gt;525600&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Units&lt;/strong&gt; &lt;code&gt;minutes&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Add feature.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Feature&lt;/strong&gt; &lt;code&gt;Caching&lt;/code&gt; &lt;code&gt;External Max-Age&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Value&lt;/strong&gt; &lt;code&gt;86400&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Units&lt;/strong&gt; &lt;code&gt;seconds&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;HSTS Header&lt;span class=&#34;absolute -mt-20&#34; id=&#34;hsts-header&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#hsts-header&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Instructs the browser to forward to &lt;code&gt;https&lt;/code&gt; if needed.&lt;/p&gt;
&lt;p&gt;Add a new rule.&lt;/p&gt;
&lt;p&gt;If &lt;code&gt;General&lt;/code&gt; &lt;code&gt;Always&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Add feature.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Feature&lt;/strong&gt; &lt;code&gt;Headers&lt;/code&gt; &lt;code&gt;Modify Client Response Header&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Action&lt;/strong&gt; &lt;code&gt;Append&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt; &lt;code&gt;Strict-Transport-Security&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Value&lt;/strong&gt; &lt;code&gt;max-age=31536000; includeSubDomains&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Redirect Root to WWW&lt;span class=&#34;absolute -mt-20&#34; id=&#34;redirect-root-to-www&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#redirect-root-to-www&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Since we are not able to add the free certificate to an endpoint with a custom domain that is an apex domain, we didn&amp;rsquo;t setup an endpoint for the apex domain. Therefore, we are not able to use HTTP Rules to redirect from root to www. Some other blogs I read did this, but it must of been before they disabled certificates for apex domains, or they purchased their own certificate. Since I am using GoDaddy, I will use their DNS management to forward root domain requests to &lt;code&gt;www.alexoswald.com&lt;/code&gt;. This forwards &lt;code&gt;http://alexoswald.com&lt;/code&gt; and &lt;code&gt;https://alexoswald.com&lt;/code&gt; to &lt;code&gt;https://alexoswald.com&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;godaddy-domain-forwarding.png&#34; alt=&#34;godaddy-domain-forwarding&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h3&gt;Other headers&lt;span class=&#34;absolute -mt-20&#34; id=&#34;other-headers&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#other-headers&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;I think it is important to add other security headers so I&amp;rsquo;ve made sure to have at least an &lt;code&gt;A&lt;/code&gt; rating on &lt;a href=&#34;https://securityheaders.com/?q=alexoswald.com&amp;amp;followRedirects=on&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Securityheaders.com&lt;/a&gt;. I suggest following the suggestions there to add other headers and improve your security.&lt;/p&gt;
&lt;h2&gt;References&lt;span class=&#34;absolute -mt-20&#34; id=&#34;references&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#references&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Here are some other developer blog posts that helped me complete this project.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://arlanblogs.alvarnet.com/adding-a-root-domain-to-azure-cdn-endpoint/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Arlan Nugara&amp;rsquo;s blog post&lt;/a&gt; helped me add the apex domain to the CDN, though I couldn&amp;rsquo;t use it because I can&amp;rsquo;t get the free certificate.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.glennprince.com/article/moving-my-site-onto-a-cdn/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Glenn Price&amp;rsquo;s blog post&lt;/a&gt; helped me because at first my site wasn&amp;rsquo;t being served, and it turned out to be because I had forgot to set the &lt;code&gt;Index document name&lt;/code&gt; and &lt;code&gt;Error document path&lt;/code&gt; in the static site setup.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.duncanmackenzie.net/blog/azure-cdn-rules/#redirecting-the-root-domain-to-the-www-version&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Duncan Mackenzie&amp;rsquo;s blog post&lt;/a&gt; helped me understand how to add security headers and why the order matters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://securityheaders.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SecurityHeaders.com/&lt;/a&gt; is a great site that lets you check your HTTP headers and rates your sites security. The author, Scott Helme has some great blog posts on headers as well.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Thank you&lt;span class=&#34;absolute -mt-20&#34; id=&#34;thank-you&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#thank-you&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;I hope you enjoyed my first post. I learned a lot reading other developers blogs and documentation so I hope you did too.&lt;/p&gt;
&lt;p&gt;If you have any comments, please feel free to email me at &lt;a href=&#34;mailto:alex@oswaldtechnologies.com&#34; &gt;alex@oswaldtechnologies.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;-Alex&lt;/p&gt;
&lt;h2&gt;Updates&lt;span class=&#34;absolute -mt-20&#34; id=&#34;updates&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#updates&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;2022-08-06&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;az storage blob sync&lt;/code&gt; no longer requires the argument &lt;code&gt;--auth-mode key&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
